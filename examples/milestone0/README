Bitergia Report Methodology
---------------------------
Based on the criteria proposed in "Reproducibility of empirical software":
http://www.springerlink.com/content/j501w21183375u1r/?MUD=MP

SCM: Source Code Management
ITS: Issue Tracking System

* Data source: LibrePlan repository

- SCM: git://libreplan.git.sourceforge.net/
- ITS: http://bugs.libreplan.org/

* Retrieval Methodology

- SCM: git clone git://libreplan.git.sourceforge.net/gitroot/libreplan/libreplan
- ITS: bicho -g --db-user-out=dbuser --db-password-out=dbpass --db-database-out=bichoLibrePlan -d 1 --backend-user="xxx" --backend-password=xxxx -b bg -u https://bugs.libreplan.org/buglist.cgi?product=NavalPlan


* Raw dataset

- SCM: Git clone local repository
- ITS: Issues are not copied in raw mode.

* Extraction methodology

- SCM: cvsanaly2 -g -u libreplan -p libreplan -d cvsanalyLibrePlan --extensions=Months
- ITS: Already done by Bicho

* Study paramenters

- Git repository: commits
- Issues downloaded: issues open and closed

* Processed dataset

- cvsanaly2 and bicho databases: cvsanalyLibrePlan, bichoLibrePlan

* Analysis methodology

Extract a timeline for commits, open and close issues with GNOME releases. Use MySQL and R for the analysis.

- SCM: R --no-restore --no-save --args cvsanalyLibrePlan libreplan libreplan < scm-milestone0.R
- ITS: R --no-restore --no-save --args bichoLibrePlan libreplan libreplan < its-milestone0.R

* Results dataset

JSON files with time series with the study parameters use for visualization.

- SCM: scm-milestone0.json
- ITS: its-milestone0.json

* Visualization

- VizGrimoireJS

Comments:   info@bitergia.com
Report URL: Final report URL publication